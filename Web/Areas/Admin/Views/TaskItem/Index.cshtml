@model List<HRManagement.DTOs.TaskItemDto>

@{
    ViewData["Title"] = "Görevler";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var planned = ViewBag.PlannedCount ?? 0;
    var inProgress = ViewBag.InProgressCount ?? 0;
    var completed = ViewBag.CompletedCount ?? 0;
    var incompleted = ViewBag.IncompletedCount ?? 0;
}

<h3 class="mb-4">Görev Durumları</h3>
<div class="row text-center mb-5">
    <div class="col-md-3">
        <div class="card p-3">
            <canvas id="plannedChart" width="100" height="100"></canvas>
            <p class="mt-2 fw-bold">Planned</p>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card p-3">
            <canvas id="progressChart" width="100" height="100"></canvas>
            <p class="mt-2 fw-bold">In Progress</p>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card p-3">
            <canvas id="completedChart" width="100" height="100"></canvas>
            <p class="mt-2 fw-bold">Completed</p>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card p-3">
            <canvas id="incompletedChart" width="100" height="100"></canvas>
            <p class="mt-2 fw-bold">In Completed</p>
        </div>
    </div>
</div>

<h3 class="mb-3">Görev Listesi</h3>

@foreach (var task in Model)
{
    string statusLabel = task.Status switch
    {
        0 => "Planned",
        1 => "In Progress",
        2 => "Completed",
        _ => "Unknown"
    };

    string badgeColor = task.Status switch
    {
        0 => "primary",
        1 => "warning",
        2 => "success",
        _ => "secondary"
    };

    int progress = task.Status switch
    {
        0 => 0,
        1 => 35,
        2 => 100,
        _ => 0
    };

    <div class="card mb-3 shadow-sm">
        <div class="card-body d-flex flex-wrap align-items-center justify-content-between">
            <!-- Kullanıcı adı ve departman -->
            <div style="width: 15%">
                <div class="fw-semibold">@task.AssignedToName</div>
                <div class="text-muted" style="font-size: 14px;">@task.DepartmentName</div>
            </div>

            <!-- Başlık ve açıklama -->
            <div style="width: 30%">
                <h5 class="card-title">@task.Title</h5>
                <p class="card-text text-muted">@task.Description</p>
            </div>

            <!-- Tarihler -->
            <div style="width: 15%">
                <small>Start: @task.AssignedDate.ToShortDateString()</small><br />
                <small>End: @(task.DueDate?.ToShortDateString() ?? "-")</small>
            </div>

            <!-- Durum etiketi -->
            <div style="width: 10%">
                <span class="badge bg-@badgeColor">@statusLabel</span>
            </div>

            <!-- Progress bar -->
            <div style="width: 20%">
                <div class="progress" style="height: 8px;">
                    <div class="progress-bar bg-@badgeColor" style="width: @progress%"></div>
                </div>
                <small class="text-muted mt-1 d-block">@progress% Progress</small>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        function renderChart(canvasId, value) {
            new Chart(document.getElementById(canvasId), {
                type: 'doughnut',
                data: {
                    datasets: [{
                        data: [value, 100 - value],
                        backgroundColor: ['#6366F1', '#E5E7EB'],
                        borderWidth: 0
                    }]
                },
                options: {
                    cutout: '75%',
                    plugins: { legend: { display: false } }
                }
            });
        }

        renderChart("plannedChart", @planned);
        renderChart("progressChart", @inProgress);
        renderChart("completedChart", @completed);
        renderChart("incompletedChart", @incompleted);
    </script>
}
